@page "/animais"
@using System.Linq
@using GestaoLeiteiraProjetoTCC.Models
@using GestaoLeiteiraProjetoTCC.Services.Interfaces
@inject IAnimalService AnimalService
@inject IPropriedadeService PropriedadeService
@inject IRacaService RacaService
@inject IProducaoLeiteiraService ProducaoLeiteiraService
@inject ILactacaoService LactacaoService
@inject NavigationManager NavigationManager

<div class="page-container">
    <div class="dashboard-header">
        <div class="header-content">
            <div class="welcome-section">
                <h1>Lista de Animais</h1>
                <p class="property-owner">Gerencie e visualize todo o seu rebanho</p>
            </div>
            <div class="header-date-section">
                <i class="fas fa-calendar-alt"></i>
                <span>@DateTime.Now.ToString("dd/MM/yyyy")</span>
            </div>
        </div>
        <div class="mobile-actions-bar">
            <button class="btn-mobile-action" @onclick="AbrirModalFiltros">
                <i class="fas fa-filter"></i> Filtrar e Ordenar
            </button>
            <button class="btn-mobile-action add" @onclick="AbrirModalNovo">
                <i class="fas fa-plus"></i> Cadastrar Animal
            </button>
        </div>
    </div>

    <div class="filters-container desktop-only">
        <div class="row align-items-end">
            <div class="col-md-4">
                <div class="form-group">
                    <label for="filtro-nome">Buscar por Nome ou Brinco</label>
                    <input id="filtro-nome" type="text" class="form-control" placeholder="Digite para buscar..."
                           @bind="filtroNome" @bind:event="oninput" @bind:after="AplicarFiltrosEOrdenacao" />
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="filtro-status">Status</label>
                    <select id="filtro-status" class="form-control" @bind="filtroStatus" @bind:after="AplicarFiltrosEOrdenacao">
                        <option value="Todos">Todos</option>
                        <option value="Ativo">Ativo</option>
                        <option value="Vendido">Vendido</option>
                        <option value="Morto">Morto</option>
                    </select>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="filtro-categoria">Categoria</label>
                    <select id="filtro-categoria" class="form-control" @bind="filtroCategoria" @bind:after="AplicarFiltrosEOrdenacao">
                        <option value="Todos">Todas</option>
                        <option value="Bezerro">Bezerro</option>
                        <option value="Bezerra">Bezerra</option>
                        <option value="Novilho">Novilho</option>
                        <option value="Novilha">Novilha</option>
                        <option value="Vaca">Vaca</option>
                        <option value="Touro">Touro</option>
                    </select>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="ordenacao">Ordenar por</label>
                    <select id="ordenacao" class="form-control" @bind="ordenacaoSelecionada" @bind:after="AplicarFiltrosEOrdenacao">
                        <option value="nome_asc">Nome (A-Z)</option>
                        <option value="data_desc">Mais Recentes (Nascimento)</option>
                        <option value="data_asc">Mais Antigos (Nascimento)</option>
                    </select>
                </div>
            </div>
        </div>
    </div>
    <div class="animal-actions desktop-only">
        <button class="btn-action add" @onclick="AbrirModalNovo">
            <span class="plus-icon">+</span> Cadastrar novo animal
        </button>
    </div>

    @if (carregandoDados)
    {
        <div class="loading-overlay"><div class="spinner"></div><p>Carregando dados...</p></div>
    }
    else if (!animais.Any())
    {
        <div class="empty-message-container"><div class="empty-message"><i class="fas fa-paw"></i><p>Nenhum animal cadastrado ainda.</p></div></div>
    }
    else if (!animaisFiltrados.Any())
    {
        <div class="empty-message-container"><div class="empty-message"><i class="fas fa-search"></i><p>Nenhum animal encontrado para os filtros selecionados.</p></div></div>
    }
    else
    {
        <div class="animais-grid">
            @foreach (var animal in animaisFiltrados)
            {
                <div class="animal-card">
                    <div class="card-header">
                        <span class="animal-name">@animal.NomeAnimal (@animal.NumeroIdentificador)</span>
                        <span class="status-badge @(animal.Status?.ToLower() ?? "inativo")">@animal.Status</span>
                    </div>

                    <div class="card-details">
                        <div class="detail-item"><span class="detail-label">Raça:</span> <span class="detail-value">@(animal.Raca?.NomeRaca ?? "Não informada")</span></div>
                        <div class="detail-item"><span class="detail-label">Categoria:</span> <span class="detail-value">@animal.CategoriaAnimal</span></div>
                        <div class="detail-item"><span class="detail-label">Nascimento:</span> <span class="detail-value">@animal.DataNascimento?.ToString("dd/MM/yyyy")</span></div>
                    </div>

                    <div class="card-actions">
                        <button class="btn-action detalhes" @onclick="() => AbrirModalDetalhes(animal)">
                            <i class="fas fa-eye"></i> Ver Detalhes
                        </button>
                    </div>
                </div>
            }
        </div>
    }

    @* Modal de DETALHES DO ANIMAL *@
    @if (exibirModalDetalhes)
    {
        <div class="modal-overlay" @onclick="FecharModalDetalhes">
            <div class="modal-content modal-detalhes" @onclick:stopPropagation>
                @if (animalSelecionado != null)
                {
                    <h3>Detalhes de @animalSelecionado.NomeAnimal</h3>

                    <div class="details-container">
                        <div class="details-left-column">
                            <div class="form-section-title">Informações Básicas</div>
                            <div class="details-basic-info">
                                <div><strong>Brinco/RFID:</strong> @animalSelecionado.NumeroIdentificador</div>
                                <div><strong>Status:</strong> @animalSelecionado.Status</div>
                                <div><strong>Raça:</strong> @(animalSelecionado.Raca?.NomeRaca ?? "Não informada")</div>
                                <div><strong>Nascimento:</strong> @animalSelecionado.DataNascimento?.ToString("dd/MM/yyyy")</div>
                                @if (animalSelecionado.PesoNascimento > 0)
                                {
                                    <div><strong>Peso ao Nascer:</strong> @animalSelecionado.PesoNascimento.ToString("F1") Kg</div>
                                }
                            </div>

                            @if (animalSelecionado.Sexo == "Fêmea")
                            {
                                <div class="form-section-title">Histórico Reprodutivo</div>
                                <div class="details-basic-info">
                                    <div><strong>Partos:</strong> @animalSelecionado.NumeroDePartos</div>
                                    <div><strong>Nascidos Mortos:</strong> @animalSelecionado.NumeroDeNascimortos</div>
                                    <div><strong>Abortos:</strong> @animalSelecionado.NumeroDeAbortos</div>
                                    <div><strong>Último Parto:</strong> @(animalSelecionado.DataUltimoParto?.ToString("dd/MM/yyyy") ?? "N/A")</div>
                                </div>
                            }

                            @if (animalSelecionado.CategoriaAnimal == "Vaca")
                            {
                                <div class="form-section-title">Histórico de Lactações</div>
                                @if (lactacoesSumario != null && lactacoesSumario.Any())
                                {
                                    <div class="table-responsive">
                                        <table class="table table-striped table-hover mt-2">
                                            <thead>
                                                <tr>
                                                    <th>Início</th>
                                                    <th>Fim</th>
                                                    <th>Duração</th>
                                                    <th>Total (L)</th>
                                                    <th>Média (L/dia)</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var sumario in lactacoesSumario)
                                                {
                                                    <tr>
                                                        <td>@sumario.DataInicio.ToString("dd/MM/yy")</td>
                                                        <td>@(sumario.DataFim?.ToString("dd/MM/yy") ?? "Ativa")</td>
                                                        <td>@sumario.DuracaoDias d</td>
                                                        <td>@sumario.ProducaoTotal.ToString("F1")</td>
                                                        <td>@sumario.MediaDiaria.ToString("F1")</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                                else
                                {
                                    <div class="text-muted text-center p-3">Nenhum histórico de lactação encontrado.</div>
                                }
                            }
                        </div>

                        <div class="details-right-column">
                            <div class="form-section-title">Árvore Genealógica</div>
                            <div class="genealogy-tree">
                                <div class="level">
                                    <div class="node parent">@(pai?.NomeAnimal ?? "Pai Desconhecido")</div>
                                    <div class="node parent">@(mae?.NomeAnimal ?? "Mãe Desconhecida")</div>
                                </div>
                                <div class="level">
                                    <div class="node animal">@animalSelecionado.NomeAnimal</div>
                                </div>
                                @if (proleDoAnimalSelecionado != null && proleDoAnimalSelecionado.Any())
                                {
                                    <div class="level children-level">
                                        @foreach (var cria in proleDoAnimalSelecionado)
                                        {
                                            <div class="node child">@cria.NomeAnimal</div>
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                    <div class="footer-actions">
                        <button type="button" class="btn btn-secondary" @onclick="FecharModalDetalhes">Fechar</button>
                        <button type="button" class="btn btn-info" @onclick="AbrirModalEdicaoDoDetalhe">
                            <i class="fas fa-edit"></i> Editar Animal
                        </button>
                    </div>
                }
            </div>
        </div>
    }

    @* Modal de Edição/Cadastro *@
    @if (exibirModal)
    {
        <div class="modal-overlay" @onclick="FecharModal">
            <div class="modal-content" @onclick:stopPropagation>
                <h3>@(animal.Id == 0 ? "Cadastrar Novo Animal" : "Editar Animal")</h3>

                <EditForm Model="animal" OnValidSubmit="HandleSalvar">
                    <DataAnnotationsValidator />
                    <div class="form-section-title">Dados Básicos</div>
                    <div class="form-grid">
                        <div class="form-group"><label for="nomeAnimal">Nome</label><InputText id="nomeAnimal" @bind-Value="animal.NomeAnimal" class="form-control" /><ValidationMessage For="@(() => animal.NomeAnimal)" /></div>
                        <div class="form-group"><label for="numeroIdentificador">Brinco</label><InputText id="numeroIdentificador" @bind-Value="animal.NumeroIdentificador" class="form-control" /><ValidationMessage For="@(() => animal.NumeroIdentificador)" /></div>
                    </div>
                    <div class="form-grid-2-col">
                        <div class="form-group"><label for="dataNascimento">Nascimento</label><InputDate id="dataNascimento" @bind-Value="animal.DataNascimento" class="form-control" /><ValidationMessage For="@(() => animal.DataNascimento)" /></div>
                        <div class="form-group">
                            <label for="racaId">Raça</label><InputSelect id="racaId" @bind-Value="animal.RacaId" class="form-control">
                                <option value="0" disabled selected>Selecione</option>@foreach (var raca in racas)
                                {
                                    <option value="@raca.Id">@raca.NomeRaca</option>
                                }
                            </InputSelect><ValidationMessage For="@(() => animal.RacaId)" />
                        </div>
                    </div>
                    <div class="form-grid-2-col">
                        <div class="form-group">
                            <label for="sexo">Sexo</label><InputSelect id="sexo" @bind-Value="animal.Sexo" @onchange="(e) => OnSexoChanged(e.Value.ToString())" class="form-control"><option value="" disabled selected>Selecione</option><option value="Macho">Macho</option><option value="Fêmea">Fêmea</option></InputSelect><ValidationMessage For="@(() => animal.Sexo)" />
                        </div>
                        <div class="form-group">
                            <label for="categoriaAnimal">Categoria</label><InputSelect id="categoriaAnimal" @bind-Value="animal.CategoriaAnimal" class="form-control" disabled="@(string.IsNullOrEmpty(animal.Sexo))">
                                <option value="" disabled selected>Selecione</option>@if (animal.Sexo == "Macho")
                                {
                                    <option value="Bezerro">Bezerro</option>
                                    <option value="Novilho">Novilho</option>
                                    <option value="Touro">Touro</option>
                                }
                                else if (animal.Sexo == "Fêmea")
                                {
                                    <option value="Bezerra">Bezerra</option>
                                    <option value="Novilha">Novilha</option>
                                    <option value="Vaca">Vaca</option>
                                }
                            </InputSelect><ValidationMessage For="@(() => animal.CategoriaAnimal)" />
                        </div>
                    </div>

                    @if (animal.CategoriaAnimal == "Bezerro" || animal.CategoriaAnimal == "Bezerra")
                    {
                        <div class="form-group" style="max-width: 250px;">
                            <label for="pesoAoNascer">Peso ao Nascer (Kg)</label>
                            <InputNumber id="pesoAoNascer" @bind-Value="animal.PesoNascimento" class="form-control" placeholder="Ex: 35.5" />
                        </div>
                    }

                    <div class="form-section-title">Vínculos Familiares</div>
                    <div class="vincular-animal-section">
                        <div class="form-group">
                            <label>Mãe</label><InputSelect @bind-Value="animal.MaeId" class="form-control" disabled="@(animal.MaeId > 0 && animal.Id != 0)">
                                <option value="0">Desconhecida</option>@foreach (var femea in animais.Where(a => a.Sexo == "Fêmea" && a.Id != animal.Id))
                                {
                                    <option value="@femea.Id">@femea.NomeAnimal (@femea.NumeroIdentificador)</option>
                                }
                            </InputSelect>
                        </div>
                        <div class="form-group">
                            <label>Pai</label><InputSelect @bind-Value="animal.PaiId" class="form-control" disabled="@(animal.PaiId > 0 && animal.Id != 0)">
                                <option value="0">Desconhecido</option>@foreach (var macho in animais.Where(a => a.Sexo == "Macho" && a.Id != animal.Id))
                                {
                                    <option value="@macho.Id">@macho.NomeAnimal (@macho.NumeroIdentificador)</option>
                                }
                            </InputSelect>
                        </div>
                    </div>
                    <div class="form-section-title">Status do Animal</div>
                    <div class="form-group" style="max-width: 250px;">
                        <label for="status">Status</label><InputSelect id="status" @bind-Value="animal.Status" class="form-control"><option value="Ativo">Ativo</option><option value="Vendido">Vendido</option><option value="Morto">Morto</option></InputSelect><ValidationMessage For="@(() => animal.Status)" />
                    </div>
                    <div class="footer-actions"><button type="button" class="btn btn-secondary" @onclick="FecharModal">Cancelar</button><button type="submit" class="btn btn-primary">Salvar</button></div>
                </EditForm>
            </div>
        </div>
    }

    @* Modal de Confirmação para Salvar *@
    @if (exibirModalConfirmacaoSalvar)
    {
        <div class="modal-overlay modal-confirmacao">
            <div class="modal-content" @onclick:stopPropagation>
                <h3>Confirmar Alterações</h3>
                <p class="confirmation-text">
                    <strong>Atenção:</strong> Confirme as alterações antes de salvar, algumas modificações não podem ser alterados posteriormente: Vínculo Parental.
                    <br /><br />
                    Deseja continuar?
                </p>
                <div class="footer-actions">
                    <button type="button" class="btn btn-secondary" @onclick="() => exibirModalConfirmacaoSalvar = false">Cancelar</button>
                    <button type="button" class="btn btn-primary" @onclick="ConfirmarSalvarAnimal">Sim, Salvar</button>
                </div>
            </div>
        </div>
    }

    @* Modal de Filtros (Mobile) *@
    @if (exibirModalFiltros)
    {
        <div class="modal-overlay" @onclick="FecharModalFiltros">
            <div class="modal-content" @onclick:stopPropagation>
                <h3>Filtrar e Ordenar</h3>
                <div class="form-group"><label for="filtro-nome-modal">Busca</label><input id="filtro-nome-modal" type="text" class="form-control" @bind="filtroNome" /></div>
                <div class="form-group"><label for="filtro-status-modal">Status</label><select id="filtro-status-modal" class="form-control" @bind="filtroStatus"><option value="Todos">Todos</option><option value="Ativo">Ativo</option><option value="Vendido">Vendido</option><option value="Morto">Morto</option></select></div>
                <div class="form-group"><label for="filtro-categoria-modal">Categoria</label><select id="filtro-categoria-modal" class="form-control" @bind="filtroCategoria"><option value="Todos">Todas</option><option value="Bezerro">Bezerro</option><option value="Bezerra">Bezerra</option><option value="Novilho">Novilho</option><option value="Novilha">Novilha</option><option value="Vaca">Vaca</option><option value="Touro">Touro</option></select></div>
                <div class="form-group"><label for="ordenacao-modal">Ordenar por</label><select id="ordenacao-modal" class="form-control" @bind="ordenacaoSelecionada"><option value="nome_asc">Nome (A-Z)</option><option value="data_desc">Mais Recentes</option><option value="data_asc">Mais Antigos</option></select></div>
                <div class="footer-actions"><button type="button" class="btn btn-secondary" @onclick="FecharModalFiltros">Cancelar</button><button type="button" class="btn btn-primary" @onclick="AplicarEFecharModalFiltros">Aplicar</button></div>
            </div>
        </div>
    }
</div>

<style>
    :root {
        --primary-dark: #023047;
        --primary-blue: #3a7ca5;
    }

    .modal-confirmacao {
        z-index: 1051;
    }

    .confirmation-text {
        font-size: 1.1rem;
        text-align: center;
        margin: 25px 0;
        line-height: 1.6;
    }

    .page-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    .dashboard-header {
        background: white;
        border-radius: 8px;
        padding: 20px 25px;
        margin-bottom: 30px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 20px;
    }

    .welcome-section h1 {
        font-size: 2.2rem;
        color: var(--primary-dark);
        margin: 0;
        font-weight: 700;
    }

    .property-owner {
        color: #666;
        font-size: 1.1rem;
        margin: 4px 0 0 0;
        font-weight: 400;
    }

    .header-date-section {
        font-size: 1rem;
        font-weight: 500;
        color: #4a5568;
        background-color: #f8f9fa;
        padding: 10px 16px;
        border-radius: 8px;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .filters-container {
        background: white;
        padding: 15px 25px 5px 25px;
        border-radius: 8px;
        margin-bottom: 20px;
        border: 1px solid #e0e7ee;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    .animal-actions {
        margin-bottom: 20px;
        display: flex;
        justify-content: flex-end;
    }

    .animais-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 20px;
    }

    .animal-card {
        background: white;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        padding: 20px;
        border-left: 4px solid var(--primary-blue);
        display: flex;
        flex-direction: column;
        cursor: default;
    }

        .animal-card:hover {
            transform: none;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

    .card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
        padding-bottom: 10px;
        border-bottom: 1px solid #eee;
    }

    .plus-icon {
        margin-right: 8px;
        font-weight: bold;
        font-size: 18px;
    }

    .animal-name {
        font-weight: bold;
        font-size: 18px;
        color: var(--primary-dark);
    }

    .status-badge {
        font-size: 12px;
        padding: 4px 10px;
        border-radius: 20px;
        font-weight: bold;
        color: white;
    }

        .status-badge.ativo {
            background-color: #28a745;
        }

        .status-badge.vendido, .status-badge.morto {
            background-color: #dc3545;
        }

        .status-badge.inativo {
            background-color: #6c757d;
        }

    .card-details {
        margin-bottom: 15px;
        flex-grow: 1;
    }

    .detail-item {
        display: flex;
        justify-content: space-between;
        margin-bottom: 8px;
        flex-wrap: wrap;
    }

    .detail-label {
        font-weight: 500;
        color: #555;
        min-width: 120px;
    }

    .detail-value {
        color: #333;
        text-align: right;
        flex: 1;
    }

    .card-actions {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
        margin-top: auto;
    }

    .btn-action {
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 14px;
        display: flex;
        align-items: center;
        gap: 8px;
        font-weight: 500;
        transition: opacity 0.2s, background-color 0.2s;
    }

        .btn-action:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }

        .btn-action.add {
            background-color: #8a5a44;
            color: white;
        }

        .btn-action.detalhes {
            background-color: #34495e;
            color: white;
            width: 100%;
            justify-content: center;
        }

        .btn-action:hover:not(:disabled) {
            opacity: 0.85;
        }

    .empty-message-container {
        background-color: white;
        border-radius: 8px;
        padding: 40px;
        border: 1px solid #e0e7ee;
        margin-top: 20px;
    }

    .empty-message {
        text-align: center;
        color: #6c757d;
    }

        .empty-message i {
            font-size: 3rem;
            margin-bottom: 15px;
            opacity: 0.5;
        }

    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        z-index: 1060;
        color: white;
    }

    .spinner {
        border: 4px solid #f3f3f3;
        border-top: 4px solid #3498db;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        animation: spin 2s linear infinite;
        margin-bottom: 20px;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.6);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1050;
    }

    .modal-content {
        background-color: #ffffff;
        padding: 25px 35px;
        border-radius: 15px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.15);
        width: 90%;
        max-width: 650px;
        max-height: 90vh;
        overflow-y: auto;
    }

        .modal-content h3 {
            margin-top: 0;
            color: var(--primary-dark);
            font-size: 24px;
            font-weight: 600;
            padding-bottom: 20px;
            border-bottom: 1px solid #e0e7ee;
            margin-bottom: 25px;
            text-align: center;
        }

    .form-grid, .form-grid-2-col {
        display: grid;
        gap: 22px;
    }

    .form-grid-2-col {
        grid-template-columns: 1fr 1fr;
    }

    .form-group {
        display: flex;
        flex-direction: column;
        gap: 8px;
        margin-bottom: 1rem;
    }

    .form-control {
        width: 100%;
        padding: 12px 16px;
        border: 1px solid #cbd5e0;
        border-radius: 8px;
        font-size: 15px;
        background-color: #f8f9fa;
        transition: border-color 0.2s ease, box-shadow 0.2s ease;
        box-sizing: border-box;
    }

        .form-control:disabled {
            background-color: #e9ecef;
            cursor: not-allowed;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--primary-blue);
            background-color: #fff;
            box-shadow: 0 0 0 3px rgba(58, 124, 165, 0.15);
        }

    select.form-control {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        padding-right: 40px;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
        background-repeat: no-repeat;
        background-position: right 1rem center;
        background-size: 16px 12px;
    }

    .footer-actions {
        display: flex;
        justify-content: flex-end;
        gap: 12px;
        margin-top: 30px;
        padding-top: 20px;
        border-top: 1px solid #e0e7ee;
    }

    .btn-primary {
        background-color: var(--primary-blue);
        color: white;
    }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
    }

    .btn-info {
        background-color: #17a2b8;
        color: white;
    }

    .validation-message {
        color: #e53e3e;
        font-size: 12px;
        margin-top: 4px;
    }

    .form-section-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: var(--primary-dark);
        margin-top: 25px;
        margin-bottom: 20px;
        padding-bottom: 8px;
        border-bottom: 2px solid var(--primary-blue);
    }

        .form-section-title:first-of-type {
            margin-top: 0;
        }

    .vincular-animal-section {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 22px;
        margin-bottom: 0;
    }

    .table-responsive {
        overflow-x: auto;
        max-height: 250px;
    }

    .mobile-actions-bar {
        display: none;
    }

    .text-muted {
        color: #6c757d;
    }

    .text-center {
        text-align: center;
    }

    .p-3 {
        padding: 1rem;
    }

    .mt-2 {
        margin-top: 0.5rem;
    }

    .modal-detalhes {
        max-width: 950px;
    }

    .details-container {
        display: flex;
        gap: 30px;
    }

    .details-left-column {
        flex: 3;
    }

    .details-right-column {
        flex: 2;
        border-left: 1px solid #e0e7ee;
        padding-left: 30px;
    }

    .details-basic-info {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 10px 20px;
        background-color: #f8f9fa;
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 15px;
        border-left: 4px solid var(--primary-blue);
    }

    .genealogy-tree {
        text-align: center;
        padding: 10px 0;
    }

        .genealogy-tree .level {
            display: flex;
            justify-content: center;
            gap: 15px;
            flex-wrap: wrap;
        }

            .genealogy-tree .level:not(:last-child) {
                margin-bottom: 20px;
            }

        .genealogy-tree .node {
            padding: 8px 15px;
            border-radius: 6px;
            border: 1px solid #ccc;
            min-width: 120px;
            max-width: 150px;
            font-size: 13px;
            background-color: #f8f9fa;
            position: relative;
            display: inline-block;
            word-wrap: break-word;
        }

    .node.animal {
        background-color: var(--primary-blue);
        color: white;
        border-color: #2c5f7f;
        font-weight: bold;
    }

    .node.parent {
        background-color: #e9ecef;
        border-color: #ced4da;
    }

    .node.child {
        background-color: #ffffff;
        border-color: #adb5bd;
    }

    .table thead {
        background-color: var(--primary-dark);
        color: white;
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: rgba(0, 0, 0, 0.03);
    }

    @@media (max-width: 992px) {
        .details-container {
            flex-direction: column;
            gap: 15px;
        }

        .details-right-column {
            border-left: none;
            padding-left: 0;
        }
    }

    @@media (max-width: 768px) {
        body, html {
            padding-top: 107px;
        }

        .page-container {
            padding: 0 10px 10px 10px;
        }

        .dashboard-header {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 1010;
            border-radius: 0;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            padding: 0;
            display: flex;
            flex-direction: column;
            background: white;
        }

        .header-content {
            padding: 10px 15px;
            flex-direction: row;
            justify-content: space-between;
            align-items: center;
        }

        .welcome-section h1 {
            font-size: 1.5rem;
        }

        .property-owner {
            display: flex;
            font-size: 1.0rem;
        }

        .header-date-section {
            padding: 5px 10px;
            font-size: 0.8rem;
        }

        .mobile-actions-bar {
            display: flex;
            gap: 10px;
            padding: 10px 15px;
            background-color: #f8f9fa;
            border-top: 1px solid #e0e7ee;
            width: 100%;
        }

        .btn-mobile-action {
            flex: 1;
            padding: 10px;
            border-radius: 8px;
            border: 1px solid #cbd5e0;
            background-color: #fff;
            color: #4a5568;
            font-size: 0.8rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }

            .btn-mobile-action.add {
                background-color: #8a5a44;
                color: white;
                border-color: #8a5a44;
            }

        .desktop-only {
            display: none;
        }

        .animais-grid {
            grid-template-columns: 1fr;
            gap: 15px;
            padding-top: 0;
        }

        .animal-card {
            padding: 15px;
        }

        .animal-name {
            font-size: 1.1rem;
        }

        .card-details {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 5px 15px;
            margin-bottom: 15px;
        }

        .detail-item {
            flex-direction: column;
            align-items: flex-start;
            margin-bottom: 5px;
            justify-content: space-between;
        }

        .detail-label {
            font-size: 0.8rem;
            color: #6c757d;
            min-width: 0;
        }

        .detail-value {
            text-align: left;
            font-weight: 600;
            font-size: 0.9rem;
        }

        .modal-content .form-group {
            margin-bottom: 1rem;
        }

        .form-grid-2-col, .vincular-animal-section, .details-basic-info {
            grid-template-columns: 1fr;
        }

        .form-section-title {
            font-size: 1.1rem;
            margin-top: 25px;
            margin-bottom: 15px;
            padding-bottom: 8px;
        }

            .form-section-title:first-of-type {
                margin-top: 0;
            }
    }
</style>

@code {
    private List<Animal> animais = new List<Animal>();
    private List<Animal> animaisFiltrados = new List<Animal>();
    private Animal animal = new Animal();
    private List<Raca> racas = new();
    private bool exibirModal = false;
    private int propriedadeId;
    private bool carregandoDados = true;

    // Filtros e Ordenação
    private string filtroNome = string.Empty;
    private string filtroStatus = "Todos";
    private string filtroCategoria = "Todos";
    private string ordenacaoSelecionada = "nome_asc";
    private bool exibirModalFiltros = false;

    // --- VARIÁVEIS PARA O MODAL DE DETALHES ---
    private bool exibirModalDetalhes = false;
    private Animal animalSelecionado;
    private Animal mae, pai;
    private List<Animal> proleDoAnimalSelecionado;
    private List<LactacaoSumario> lactacoesSumario;

    // --- NOVA VARIÁVEL DE ESTADO PARA O MODAL DE CONFIRMAÇÃO ---
    private bool exibirModalConfirmacaoSalvar = false;

    public class LactacaoSumario
    {
        public DateTime DataInicio { get; set; }
        public DateTime? DataFim { get; set; }
        public int DuracaoDias { get; set; }
        public double ProducaoTotal { get; set; }
        public double MediaDiaria => DuracaoDias > 0 ? ProducaoTotal / DuracaoDias : 0;
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            carregandoDados = true;
            var propriedade = PropriedadeService.ObterPropriedadeLogada();
            propriedadeId = propriedade.Id;

            racas = (await RacaService.ObterRacasOrdenadasPorNome())
                .Where(r => r.Status == "Sistema" || r.Status == "Usuario")
                .OrderBy(r => r.NomeRaca)
                .ToList();

            await CarregarAnimais();
        }
        finally
        {
            carregandoDados = false;
            StateHasChanged();
        }
    }

    private async Task CarregarAnimais()
    {
        animais = await AnimalService.ObterAnimaisDaPropriedadeAsync(propriedadeId);
        if (animais != null && racas != null)
        {
            foreach (var an in animais)
            {
                an.Raca = racas.FirstOrDefault(r => r.Id == an.RacaId);
            }
        }
        AplicarFiltrosEOrdenacao();
    }

    private void AplicarFiltrosEOrdenacao()
    {
        IEnumerable<Animal> query = animais;
        if (!string.IsNullOrWhiteSpace(filtroNome)) { query = query.Where(a => (a.NomeAnimal?.Contains(filtroNome, StringComparison.OrdinalIgnoreCase) ?? false) || (a.NumeroIdentificador?.Contains(filtroNome, StringComparison.OrdinalIgnoreCase) ?? false)); }
        if (filtroStatus != "Todos") { query = query.Where(a => a.Status == filtroStatus); }
        if (filtroCategoria != "Todos") { query = query.Where(a => a.CategoriaAnimal == filtroCategoria); }
        switch (ordenacaoSelecionada)
        {
            case "data_desc": query = query.OrderByDescending(a => a.DataNascimento); break;
            case "data_asc": query = query.OrderBy(a => a.DataNascimento); break;
            case "nome_asc": default: query = query.OrderBy(a => a.NomeAnimal); break;
        }
        animaisFiltrados = query.ToList();
    }

    private async Task AbrirModalDetalhes(Animal animal)
    {
        animalSelecionado = animal;
        exibirModalDetalhes = true;
        mae = pai = null;
        proleDoAnimalSelecionado = new List<Animal>();
        lactacoesSumario = new List<LactacaoSumario>();

        pai = animais.FirstOrDefault(a => a.Id == animal.PaiId);
        mae = animais.FirstOrDefault(a => a.Id == animal.MaeId);

        if (animal.Sexo == "Fêmea") { proleDoAnimalSelecionado = animais.Where(cria => cria.MaeId == animal.Id).OrderByDescending(cria => cria.DataNascimento).ToList(); }
        else if (animal.Sexo == "Macho") { proleDoAnimalSelecionado = animais.Where(cria => cria.PaiId == animal.Id).OrderByDescending(cria => cria.DataNascimento).ToList(); }

        if (animal.CategoriaAnimal == "Vaca")
        {
            var lactacoes = await LactacaoService.ObterLactacoesPorAnimalAsync(animal.Id);
            var producoes = await ProducaoLeiteiraService.ObterPorPropriedadeAsync(propriedadeId);
            foreach (var lact in lactacoes.OrderByDescending(l => l.DataInicio))
            {
                var producoesDaLactacao = producoes.Where(p => p.LactacaoId == lact.Id).ToList();
                var dataFim = lact.DataFim ?? DateTime.Today;
                var duracao = (dataFim.Date - lact.DataInicio.Date).Days + 1;
                lactacoesSumario.Add(new LactacaoSumario { DataInicio = lact.DataInicio, DataFim = lact.DataFim, DuracaoDias = duracao, ProducaoTotal = producoesDaLactacao.Sum(p => p.Quantidade) });
            }
        }
        StateHasChanged();
    }

    private void FecharModalDetalhes()
    {
        exibirModalDetalhes = false;
        animalSelecionado = null;
    }

    private void AbrirModalEdicaoDoDetalhe()
    {
        if (animalSelecionado != null)
        {
            AbrirModalEditar(animalSelecionado);
            exibirModalDetalhes = false;
        }
    }

    private void AbrirModalNovo()
    {
        animal = new Animal { PropriedadeId = propriedadeId, DataNascimento = DateTime.Today, Status = "Ativo", Sexo = "", CategoriaAnimal = "", RacaId = 0 };
        exibirModal = true;
    }

    private void AbrirModalEditar(Animal a)
    {
        animal = new Animal { Id = a.Id, NomeAnimal = a.NomeAnimal, NumeroIdentificador = a.NumeroIdentificador, RacaId = a.RacaId, DataNascimento = a.DataNascimento, Sexo = a.Sexo, CategoriaAnimal = a.CategoriaAnimal, Status = a.Status, PropriedadeId = a.PropriedadeId, MaeId = a.MaeId, PaiId = a.PaiId, PesoNascimento = a.PesoNascimento };
        exibirModal = true;
    }

    // --- MÉTODOS PARA O FLUXO DE CONFIRMAÇÃO ---

    // 1. Chamado pelo OnValidSubmit do EditForm. Apenas abre o modal de confirmação.
    private void HandleSalvar()
    {
        exibirModalConfirmacaoSalvar = true;
    }

    // 2. Chamado pelo botão "Sim, Salvar" do modal de confirmação. Contém a lógica de salvamento.
    private async Task ConfirmarSalvarAnimal()
    {
        exibirModalConfirmacaoSalvar = false;

        try
        {
            carregandoDados = true;
            exibirModal = false;
            if (animal.MaeId == 0) animal.MaeId = null;
            if (animal.PaiId == 0) animal.PaiId = null;

            if (animal.Id == 0)
            {
                await AnimalService.CadastrarAnimalAsync(animal);
            }
            else
            {
                await AnimalService.AtualizarAnimalAsync(animal);
            }

            await CarregarAnimais();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao salvar animal: {ex.Message}");
            exibirModal = true;
        }
        finally
        {
            carregandoDados = false;
            StateHasChanged();
        }
    }

    private void FecharModal() { exibirModal = false; }
    private void OnSexoChanged(string value) { animal.Sexo = value; animal.CategoriaAnimal = ""; StateHasChanged(); }
    private void AbrirModalFiltros() => exibirModalFiltros = true;
    private void FecharModalFiltros() => exibirModalFiltros = false;
    private void AplicarEFecharModalFiltros() { AplicarFiltrosEOrdenacao(); FecharModalFiltros(); }
}