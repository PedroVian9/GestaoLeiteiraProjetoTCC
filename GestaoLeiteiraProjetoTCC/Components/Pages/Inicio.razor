@page "/inicio"
@using GestaoLeiteiraProjetoTCC.Models
@using GestaoLeiteiraProjetoTCC.Services.Interfaces
@inject IPropriedadeService PropriedadeService
@inject IAnimalService AnimalService
@inject IProducaoLeiteiraService ProducaoLeiteiraService

<div class="dashboard-wrapper">
    @if (propriedade != null && animais != null)
    {
        <div class="property-card">
            <div class="property-info">
                <h2>@propriedade.NomePropriedade</h2>
                <p><strong>Proprietário:</strong> @propriedade.NomeProprietario</p>
                <p><strong>Localização:</strong> @propriedade.Localizacao</p>
                <p>
                    <strong>Área Total:</strong> @propriedade.AreaTotal
                    @(propriedade.TipoUnidade == 1 ? "Alqueires" : "Hectares")
                </p>
            </div>
            <div class="property-total">
                <span class="total-value">@totalAnimais</span>
                <span class="total-label">Animais no Rebanho</span>
            </div>
        </div>

        <div class="animal-analysis-grid">
            <div class="section-card animal-card">
                <div class="animal-card-header">
                    <h3 class="animal-card-title">Rebanho: Fêmeas</h3>
                    <span class="animal-total-badge">@totalFemeas</span>
                </div>
                <div class="animal-category-list">
                    <div class="animal-category-item"><span>Bezerras</span> <span class="category-value">@bezerras</span></div>
                    <div class="animal-category-item"><span>Novilhas</span> <span class="category-value">@novilhas</span></div>
                    <div class="animal-category-item"><span>Vacas</span> <span class="category-value">@vacas</span></div>
                </div>
                <div class="female-status-section">
                    <h4 class="status-title">Status das Fêmeas</h4>
                    <div class="status-grid">
                        <div class="status-item"><span>Em Lactação</span> <strong>@femeasLactantes</strong></div>
                        <div class="status-item"><span>Secas</span> <strong>@vacasSecas</strong></div>
                        <div class="status-item"><span>Prenhas</span> <strong>@femeasPrenhas</strong></div>
                    </div>
                </div>
            </div>

            <div class="section-card animal-card">
                <div class="animal-card-header">
                    <h3 class="animal-card-title">Rebanho: Machos</h3>
                    <span class="animal-total-badge">@totalMachos</span>
                </div>
                <div class="animal-category-list">
                    <div class="animal-category-item"><span>Bezerros</span> <span class="category-value">@bezerros</span></div>
                    <div class="animal-category-item"><span>Novilhos</span> <span class="category-value">@novilhos</span></div>
                    <div class="animal-category-item"><span>Touros</span> <span class="category-value">@touros</span></div>
                </div>
            </div>
        </div>


        <div class="main-grid">
            <div class="section-card">
                <h3 class="section-title">Produção de Leite do Rebanho</h3>
                <div class="production-content">
                    <div class="production-main">
                        <div class="production-today-value">@producaoHoje.ToString("F1") L</div>
                        <div class="production-today-label">Produção Total de Hoje</div>
                        @if (producaoOntem > 0)
                        {
                            var variacao = ((producaoHoje - producaoOntem) / producaoOntem) * 100;
                            <div class="production-comparison @(variacao >= 0 ? "positive" : "negative")">
                                @(variacao >= 0 ? "▲" : "▼")
                                @Math.Abs(variacao).ToString("F1")% em relação a ontem
                            </div>
                        }
                    </div>
                    <div class="production-secondary-stats">
                        <div class="secondary-stat">
                            <span>Total do Rebanho no Mês</span>
                            <strong>@producaoTotalMes.ToString("F1") L</strong>
                        </div>
                        <div class="secondary-stat">
                            <span>Média Diária do Rebanho</span>
                            <strong>@mediaProducaoDiaria.ToString("F1") L</strong>
                        </div>
                        <div class="secondary-stat">
                            <span>Total do Rebanho (Mês Ant.)</span>
                            <strong>@producaoMesAnterior.ToString("F1") L</strong>
                        </div>
                    </div>
                </div>
                <div class="chart-container">
                    <div class="chart-placeholder">
                        <span>Gráfico de produção dos últimos 7 dias (implementação futura)</span>
                    </div>
                </div>
            </div>

            <div class="section-card">
                <h3 class="section-title">Alertas e Notificações</h3>
                <div class="alerts-container">
                    @if (alertas.Any())
                    {
                        @foreach (var alerta in alertas)
                        {
                            <div class="alert-item">
                                <span class="alert-text">@alerta</span>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="no-alerts">
                            <span>Nenhum alerta no momento.</span>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="loading-container">
            <div class="loading-spinner"></div>
            <p>Carregando informações da propriedade...</p>
        </div>
    }
</div>

<style>
    /* ------------------- */
    /* Variáveis e Globais */
    /* ------------------- */
    :root {
        --primary-blue: #023047;
        --primary-dark-text: #343a40;
        --light-bg: #f8f9fa;
        --white: #ffffff;
        --text-dark: #333;
        --text-light: #6c757d;
        --border-color: #dee2e6;
        --shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        --border-radius: 12px;
        --success-color: #198754;
        --danger-color: #dc3545;
        --female-color: #d63384;
        --light-blue-bg: rgba(2, 48, 71, 0.05);
    }

    * {
        box-sizing: border-box;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
    }

    .dashboard-wrapper {
        background: var(--light-bg);
        padding: 24px;
    }

    .section-card {
        background: var(--white);
        border-radius: var(--border-radius);
        padding: 24px;
        box-shadow: var(--shadow);
        border: 1px solid var(--border-color);
        display: flex;
        flex-direction: column;
    }

    .section-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: var(--primary-dark-text);
        margin: 0 0 20px 0;
        padding-bottom: 10px;
        border-bottom: 1px solid var(--border-color);
    }

    /* ------------------- */
    /* Seção do Cabeçalho  */
    /* ------------------- */
    .property-card {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background: var(--white);
        border: 1px solid var(--border-color);
        border-radius: var(--border-radius);
        padding: 24px;
        margin-bottom: 24px;
        box-shadow: var(--shadow);
    }

    .property-info h2 {
        font-size: 1.6rem;
        font-weight: 700;
        margin: 0 0 10px 0;
        color: var(--primary-dark-text);
    }

    .property-info p {
        margin: 4px 0;
        color: var(--text-light);
        font-size: 0.95rem;
    }

    .property-total {
        text-align: center;
        background: var(--light-blue-bg);
        padding: 20px 30px;
        border-radius: 12px;
        border: 1px solid var(--border-color);
    }

        .property-total .total-value {
            font-size: 2.5rem;
            font-weight: 700;
            color: var(--primary-blue);
            display: block;
        }

        .property-total .total-label {
            font-size: 0.95rem;
            color: var(--text-light);
        }


    /* -------------------------- */
    /* Indicadores Principais (KPIs) */
    /* -------------------------- */
    .kpi-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 20px;
        margin-bottom: 24px;
    }

    .kpi-card {
        background: var(--white);
        border-radius: var(--border-radius);
        padding: 20px;
        border: 1px solid var(--border-color);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

        .kpi-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 16px rgba(0,0,0,0.08);
        }

    .kpi-value {
        font-size: 1.75rem;
        font-weight: 700;
        color: var(--primary-dark-text);
        line-height: 1.1;
    }

    .kpi-label {
        font-size: 0.9rem;
        color: var(--text-light);
        margin-top: 4px;
    }

    /* ---------------------------- */
    /* Seção: Análise do Rebanho */
    /* ---------------------------- */
    .animal-analysis-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 24px;
        margin-bottom: 24px;
    }

    .animal-card-header {
        display: flex;
        align-items: center;
        gap: 12px;
        padding-bottom: 16px;
        margin-bottom: 16px;
        border-bottom: 1px solid var(--border-color);
    }

    .animal-card-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: var(--primary-dark-text);
        margin: 0;
    }

    .animal-total-badge {
        margin-left: auto;
        font-weight: 700;
        background-color: var(--light-bg);
        border: 1px solid var(--border-color);
        border-radius: 6px;
        padding: 6px 10px;
        font-size: 0.9rem;
    }

    .animal-category-list {
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

    .animal-category-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px;
        border-radius: 6px;
    }

        .animal-category-item:nth-child(odd) {
            background-color: var(--light-bg);
        }

        .animal-category-item .category-value {
            font-weight: 700;
            color: var(--primary-dark-text);
        }

    .female-status-section {
        margin-top: auto;
        padding-top: 16px;
        background-color: var(--light-blue-bg);
        border-radius: 8px;
        margin: 20px -10px -10px -10px;
        padding: 16px;
    }

    .status-title {
        font-size: 0.9rem;
        font-weight: 600;
        text-align: center;
        margin: 0 0 12px 0;
        color: var(--primary-dark-text);
    }

    .status-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        text-align: center;
        gap: 10px;
    }

    .status-item span {
        font-size: 0.85rem;
        color: var(--text-light);
        display: block;
    }

    .status-item strong {
        font-size: 1.2rem;
        color: var(--primary-dark-text);
    }

    /* -------------------------- */
    /* Grid Principal (Prod/Alert)*/
    /* -------------------------- */
    .main-grid {
        display: grid;
        grid-template-columns: 1.5fr 1fr;
        gap: 24px;
    }

    /* ------------------- */
    /* Seção de Produção   */
    /* ------------------- */
    .production-content {
        display: flex;
        gap: 24px;
        margin-bottom: 24px;
        border-bottom: 1px solid var(--border-color);
        padding-bottom: 24px;
    }

    .production-main {
        flex: 1;
        text-align: center;
        border-right: 1px solid var(--border-color);
        padding-right: 24px;
    }

    .production-today-value {
        font-size: 3.5rem;
        font-weight: 700;
        color: var(--primary-blue);
        line-height: 1;
    }

    .production-today-label {
        color: var(--text-light);
        margin-top: 8px;
    }

    .production-comparison {
        margin-top: 12px;
        font-weight: 500;
    }

        .production-comparison.positive {
            color: var(--success-color);
        }

        .production-comparison.negative {
            color: var(--danger-color);
        }

    .production-secondary-stats {
        flex: 1;
        display: flex;
        flex-direction: column;
        justify-content: center;
        gap: 16px;
    }

    .secondary-stat {
        display: flex;
        justify-content: space-between;
        font-size: 1rem;
        color: var(--text-dark);
    }

        .secondary-stat strong {
            font-weight: 700;
        }

    .chart-container {
        width: 100%;
        margin-top: auto;
    }

    .chart-placeholder {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 180px;
        background: var(--light-bg);
        border-radius: 8px;
        color: var(--text-light);
        text-align: center;
    }

    /* ----------------- */
    /* Seção de Alertas  */
    /* ----------------- */
    .alerts-container {
        height: 350px;
        overflow-y: auto;
        padding-right: 10px;
    }

    .alert-item {
        padding: 12px 16px;
        border-radius: 8px;
        background-color: rgba(220, 53, 69, 0.1);
        border-left: 5px solid var(--danger-color);
        margin-bottom: 12px;
    }

    .alert-text {
        font-size: 0.9rem;
        color: #5d161d;
        font-weight: 500;
    }

    .no-alerts {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        height: 100%;
        color: var(--text-light);
        background: rgba(25, 135, 84, 0.05);
        border-left: 5px solid var(--success-color);
        border-radius: 8px;
    }

    /* ----------------------- */
    /* Estado de Carregamento  */
    /* ----------------------- */
    .loading-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        min-height: 80vh;
        gap: 20px;
    }

    .loading-spinner {
        width: 40px;
        height: 40px;
        border: 4px solid #f3f3f3;
        border-top: 4px solid var(--primary-blue);
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    /* ----------------- */
    /* Responsividade    */
    /* ----------------- */
    @@media (max-width: 1200px) {
        .main-grid {
            grid-template-columns: 1fr;
        }
    }

    @@media (max-width: 992px) {
        .kpi-grid {
            grid-template-columns: repeat(2, 1fr);
        }

        .animal-analysis-grid {
            grid-template-columns: 1fr;
        }

        .production-content {
            flex-direction: column;
        }

        .production-main {
            border-right: none;
            border-bottom: 1px solid var(--border-color);
            padding-right: 0;
            padding-bottom: 24px;
        }
    }

    @@media (max-width: 576px) {
        .dashboard-wrapper {
            padding: 16px;
        }

        .kpi-grid {
            grid-template-columns: 1fr;
        }
    }

</style>

@code {
    private Propriedade propriedade;
    private List<Animal> animais;

    // Estatísticas do Rebanho por categoria
    private int totalAnimais = 0;
    private int totalFemeas = 0;
    private int totalMachos = 0;
    private int bezerros = 0;
    private int bezerras = 0;
    private int novilhos = 0;
    private int novilhas = 0;
    private int vacas = 0;
    private int touros = 0;

    // Situação das Fêmeas
    private int femeasLactantes = 0;
    private int femeasPrenhas = 0;
    private int vacasSecas = 0;

    // Estatísticas de Produção
    private double producaoHoje = 0;
    private double producaoOntem = 0;
    private double producaoTotalMes = 0;
    private double producaoMesAnterior = 0;
    private double mediaProducaoDiaria = 0;

    // Alertas
    private List<string> alertas = new();

    protected override async Task OnInitializedAsync()
    {
        await CarregarDados();
    }

    private async Task CarregarDados()
    {
        propriedade = PropriedadeService.ObterPropriedadeLogada();

        if (propriedade != null)
        {
            animais = await AnimalService.ObterAnimaisDaPropriedadeAsync(propriedade.Id);
            var animaisAtivos = animais.Where(a => a.Status == "Ativo").ToList();

            // Calcular Resumo do Rebanho
            totalAnimais = animaisAtivos.Count;
            totalFemeas = animaisAtivos.Count(a => a.Sexo == "Fêmea");
            totalMachos = totalAnimais - totalFemeas;

            // Estatísticas por categoria
            bezerros = animaisAtivos.Count(a => a.Sexo == "Macho" && a.CategoriaAnimal == "Bezerro");
            bezerras = animaisAtivos.Count(a => a.Sexo == "Fêmea" && a.CategoriaAnimal == "Bezerra");
            novilhos = animaisAtivos.Count(a => a.CategoriaAnimal == "Novilho");
            novilhas = animaisAtivos.Count(a => a.CategoriaAnimal == "Novilha");
            vacas = animaisAtivos.Count(a => a.CategoriaAnimal == "Vaca");
            touros = animaisAtivos.Count(a => a.CategoriaAnimal == "Touro");

            // Situação das Fêmeas
            femeasLactantes = animaisAtivos.Count(a => a.Sexo == "Fêmea" && a.Lactante);
            femeasPrenhas = animaisAtivos.Count(a => a.Sexo == "Fêmea" && a.Prenha);
            vacasSecas = animaisAtivos.Count(a => a.CategoriaAnimal == "Vaca" && !a.Lactante);

            // Calcular Produção
            var hoje = DateTime.Today;
            var ontem = hoje.AddDays(-1);
            var primeiroDiaDoMes = new DateTime(hoje.Year, hoje.Month, 1);
            var mesAnterior = primeiroDiaDoMes.AddMonths(-1);
            var ultimoDiaMesAnterior = primeiroDiaDoMes.AddDays(-1);

            var producoes = await ProducaoLeiteiraService.ObterPorPropriedadeAsync(propriedade.Id);

            // Produção atual
            producaoHoje = producoes.Where(p => p.Data.Date == hoje).Sum(p => p.Quantidade);
            producaoOntem = producoes.Where(p => p.Data.Date == ontem).Sum(p => p.Quantidade);
            producaoTotalMes = producoes.Where(p => p.Data.Date >= primeiroDiaDoMes && p.Data.Date <= hoje).Sum(p => p.Quantidade);

            // Produção mês anterior
            producaoMesAnterior = producoes.Where(p => p.Data.Date >= mesAnterior && p.Data.Date <= ultimoDiaMesAnterior).Sum(p => p.Quantidade);

            // Médias
            int diasNoMesAteHoje = hoje.Day;
            mediaProducaoDiaria = diasNoMesAteHoje > 0 ? producaoTotalMes / diasNoMesAteHoje : 0;

            // Gerar Alertas
            GerarAlertas(animaisAtivos, producoes, hoje);
        }
        StateHasChanged();
    }

    private void GerarAlertas(List<Animal> animaisAtivos, List<ProducaoLeiteira> producoes, DateTime hoje)
    {
        alertas.Clear();
        var dataLimite = hoje.AddDays(-3);

        var animaisEmLactacao = animaisAtivos.Where(a => a.Lactante).ToList();

        foreach (var animal in animaisEmLactacao)
        {
            bool produziuRecentemente = producoes.Any(p => p.AnimalId == animal.Id && p.Data.Date >= dataLimite);
            if (!produziuRecentemente)
            {
                alertas.Add($"A vaca '{animal.NomeAnimal}' não tem registro de produção há 3 dias ou mais.");
            }
        }

        if (producaoHoje > 0 && mediaProducaoDiaria > 0 && producaoHoje < (mediaProducaoDiaria * 0.8))
        {
            alertas.Add("Atenção: Produção de hoje está significativamente abaixo da média mensal.");
        }
    }
}