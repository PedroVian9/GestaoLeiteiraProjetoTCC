@page "/inicio"
@using GestaoLeiteiraProjetoTCC.Models
@using GestaoLeiteiraProjetoTCC.Services.Interfaces
@inject IPropriedadeService PropriedadeService
@inject IAnimalService AnimalService
@inject IProducaoLeiteiraService ProducaoLeiteiraService

<div class="dashboard-wrapper">
    @if (propriedade != null)
    {
        <!-- Header Section -->
        <div class="dashboard-header">
            <div class="header-content">
                <div class="welcome-section">
                    <h1 class="property-name">@propriedade.NomePropriedade</h1>
                    <p class="property-owner">Proprietário: @propriedade.NomeProprietario</p>
                </div>
                <div class="property-info-card">
                    <div class="info-item">
                        <i class="fas fa-map-marker-alt"></i>
                        <span>Cidade: @propriedade.Localizacao</span>
                    </div>
                    <div class="info-item">
                        <i class="fas fa-ruler-combined"></i>
                        <span>
                            Área total: @propriedade.AreaTotal
                            @if (propriedade.TipoUnidade == 1)
                            {
                                <text> alqueires mineiros</text>
                            }
                            else if (propriedade.TipoUnidade == 2)
                            {
                                <text> alqueires paulistas</text>
                            }
                            else if (propriedade.TipoUnidade == 3)
                            {
                                <text> hectares</text>
                            }
                        </span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Resumo do rebanho -->
        <div class="stats-section">
            <h3 class="section-title">
                <i class="fas fa-cow"></i>
                Resumo do Rebanho
            </h3>
            <div class="stats-grid">
                <div class="stat-card primary">
                    <div class="stat-content">
                        <div class="stat-number">@totalAnimais</div>
                        <div class="stat-label">Total de Animais</div>
                    </div>
                </div>

                <div class="stat-card females">
                    <div class="stat-content">
                        <div class="stat-number">@totalFemeas</div>
                        <div class="stat-label">Fêmeas</div>
                    </div>
                </div>

                <div class="stat-card lactation">
                    <div class="stat-content">
                        <div class="stat-number">@animaisLactantes</div>
                        <div class="stat-label">Em Lactação</div>
                    </div>
                </div>

                <div class="stat-card pregnant">
                    <div class="stat-content">
                        <div class="stat-number">@totalPrenhas</div>
                        <div class="stat-label">Prenhas</div>
                    </div>
                </div>

                <div class="stat-card calves">
                    <div class="stat-content">
                        <div class="stat-number">@totalBezerros</div>
                        <div class="stat-label">Bezerros</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Content Grid -->
        <div class="dashboard-grid">
            <!-- Alerts Section - Moved to top priority -->
            <div class="alerts-section">
                <h3 class="section-title">
                    <i class="fas fa-exclamation-triangle"></i>
                    Alertas e Notificações
                </h3>
                <div class="alerts-container">
                    @if (alertas.Any())
                    {
                        @foreach (var alerta in alertas)
                        {
                            <div class="alert-item">
                                <i class="fas fa-warning"></i>
                                <span>@alerta</span>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="no-alerts">
                            <i class="fas fa-check-circle"></i>
                            <span>Sem alertas no momento</span>
                        </div>
                    }
                </div>
            </div>

            <!-- Right Column - Production Stats -->
            <div class="production-section">
                <h3 class="section-title">
                    <i class="fas fa-chart-line"></i>
                    Produção de Leite
                </h3>
                <div class="production-grid">
                    <div class="production-card today">
                        <div class="production-header">
                            <i class="fas fa-calendar-day"></i>
                            <h4>Hoje</h4>
                        </div>
                        <div class="production-value">@producaoHoje<span class="unit">L</span></div>
                    </div>

                    <div class="production-card month">
                        <div class="production-header">
                            <i class="fas fa-calendar-alt"></i>
                            <h4>Este mês</h4>
                        </div>
                        <div class="production-value">@producaoTotalMes<span class="unit">L</span></div>
                    </div>

                    <div class="production-card average">
                        <div class="production-header">
                            <i class="fas fa-calculator"></i>
                            <h4>Média diária no mês</h4>
                        </div>
                        <div class="production-value">@mediaProducaoDiaria<span class="unit">L</span></div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="loading-container">
            <div class="loading-spinner"></div>
            <p>Carregando informações da propriedade...</p>
        </div>
    }
</div>

<style>
    * {
        box-sizing: border-box;
    }

    .dashboard-wrapper {
        min-height: 100vh;
        background: #f8f9fa;
        padding: 20px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    /* Header Section */
    .dashboard-header {
        background: white;
        border-radius: 8px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 20px;
    }

    .welcome-section h1 {
        font-size: 2.5rem;
        color: #023047;
        margin: 0;
        font-weight: 700;
    }

    .property-owner {
        color: #666;
        font-size: 1.2rem;
        margin: 5px 0 0 0;
        font-weight: 500;
    }

    .property-info-card {
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

    .info-item {
        display: flex;
        align-items: center;
        gap: 10px;
        color: #555;
        font-weight: 500;
    }

        .info-item i {
            color: #3a7ca5;
            width: 20px;
        }

    /* Main Grid Layout */
    .dashboard-grid {
        display: grid;
        grid-template-columns: 2fr 1fr;
        gap: 20px;
        margin-bottom: 20px;
    }

    /* Section Titles */
    .section-title {
        display: flex;
        align-items: center;
        gap: 8px;
        font-size: 1.1rem;
        color: #023047;
        margin: 0 0 15px 0;
        font-weight: 600;
    }

        .section-title i {
            color: #3a7ca5;
        }

    /* Stats Section */
    .stats-section {
        background: white;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(130px, 1fr));
        gap: 12px;
    }

    .stat-card {
        background: #3a7ca5;
        border-radius: 6px;
        padding: 15px;
        color: white;
        transition: all 0.2s ease;
        cursor: pointer;
    }

        .stat-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
        }

        .stat-card.lactation {
            background: #3a7ca5;
        }

        .stat-card.calves {
            background: #3a7ca5;
        }

        .stat-card.females {
            background: #3a7ca5;
        }

        .stat-card.pregnant {
            background: #3a7ca5;
        }

    .stat-content {
        text-align: center;
    }

    .stat-number {
        font-size: 1.8rem;
        font-weight: 700;
        line-height: 1;
        margin-bottom: 5px;
    }

    .stat-label {
        font-size: 0.85rem;
        opacity: 0.9;
        font-weight: 400;
    }

    .stat-icon {
        display: none;
    }

    /* Production Section */
    .production-section {
        background: white;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .production-grid {
        display: flex;
        flex-direction: column;
        gap: 12px;
    }

    .production-card {
        background: #f1f8ff;
        border-radius: 6px;
        padding: 15px;
        transition: all 0.2s ease;
        border-left: 4px solid #3a7ca5;
    }

        .production-card:hover {
            background: #e8f4f8;
        }

        .production-card.today {
            border-left-color: #3a7ca5;
            background: #f1f8ff;
        }

        .production-card.month {
            border-left-color: #3a7ca5;
            background: #f1f8ff;
        }

        .production-card.average {
            border-left-color: #3a7ca5;
            background: #f1f8ff;
        }

    .production-header {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 15px;
    }

        .production-header i {
            color: #666;
        }

        .production-header h4 {
            color: #023047;
            margin: 0;
            font-size: 1.1rem;
            font-weight: 600;
        }

    .production-value {
        font-size: 2.2rem;
        font-weight: 700;
        color: #023047;
        display: flex;
        align-items: baseline;
        gap: 8px;
    }

        .production-value .unit {
            font-size: 1.2rem;
            color: #666;
            font-weight: 500;
        }

    /* Alerts Section */
    .alerts-section {
        background: white;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .alerts-container {
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

    .alert-item {
        display: flex;
        align-items: center;
        gap: 10px;
        background: #fff5f5;
        padding: 12px 15px;
        border-radius: 6px;
        border-left: 4px solid #dc3545;
        color: #721c24;
        font-weight: 500;
        font-size: 0.9rem;
    }

        .alert-item i {
            color: #dc3545;
            font-size: 1rem;
        }

    .no-alerts {
        display: flex;
        align-items: center;
        gap: 10px;
        background: #e0f2f1;
        padding: 15px;
        border-radius: 6px;
        border-left: 4px solid #3a7ca5;
        color: #023047;
        font-weight: 500;
        font-size: 0.9rem;
    }

        .no-alerts i {
            color: #3a7ca5;
            font-size: 1.2rem;
        }

    /* Loading State */
    .loading-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        min-height: 50vh;
        gap: 20px;
    }

    .loading-spinner {
        width: 40px;
        height: 40px;
        border: 4px solid #f3f3f3;
        border-top: 4px solid #3a7ca5;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }
</style>

@code {
    private Propriedade propriedade;
    private int totalAnimais = 0;
    private int animaisLactantes = 0;
    private int totalBezerros = 0;
    private int totalFemeas = 0;
    private int totalPrenhas = 0;

    private double producaoHoje = 0;
    private double producaoTotalMes = 0;
    private double mediaProducaoDiaria = 0;

    private List<string> alertas = new();

    protected override async Task OnInitializedAsync()
    {
        await CarregarDados();
    }

    private async Task CarregarDados()
    {
        propriedade = PropriedadeService.ObterPropriedadeLogada();

        if (propriedade != null)
        {
            var animais = await AnimalService.ObterAnimaisDaPropriedadeAsync(propriedade.Id);

            totalAnimais = animais.Count;
            animaisLactantes = animais.Count(a => a.Lactante);
            totalBezerros = animais.Count(a => a.CategoriaAnimal == "Bezerro");
            totalFemeas = animais.Count(a => a.Sexo == "Fêmea");
            totalPrenhas = animais.Count(a => a.Prenha);

            var hoje = DateTime.Today;
            var primeiroDiaDoMes = new DateTime(hoje.Year, hoje.Month, 1);

            var producoes = await ProducaoLeiteiraService.ObterPorPropriedadeAsync(propriedade.Id);

            producaoHoje = producoes.Where(p => p.Data.Date == hoje).Sum(p => p.Quantidade);
            producaoTotalMes = producoes.Where(p => p.Data >= primeiroDiaDoMes).Sum(p => p.Quantidade);

            int diasComProducao = producoes
                .Where(p => p.Data >= primeiroDiaDoMes)
                .Select(p => p.Data.Date)
                .Distinct()
                .Count();

            mediaProducaoDiaria = diasComProducao > 0
                ? Math.Round(producaoTotalMes / diasComProducao, 2)
                : 0;

            // Alertas simples (exemplo)
            var idsLactantes = animais.Where(a => a.Lactante).Select(a => a.Id).ToList();
            var dataLimite = hoje.AddDays(-3);
            foreach (var id in idsLactantes)
            {
                bool produziuUltimosDias = producoes.Any(p => p.AnimalId == id && p.Data >= dataLimite);
                if (!produziuUltimosDias)
                {
                    var nome = animais.First(a => a.Id == id).NomeAnimal;
                    alertas.Add($"Animal {nome} não possui produção nos últimos 3 dias.");
                }
            }
        }
    }
}