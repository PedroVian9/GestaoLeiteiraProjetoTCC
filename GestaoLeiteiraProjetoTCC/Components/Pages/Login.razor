@using GestaoLeiteiraProjetoTCC.Models
@using GestaoLeiteiraProjetoTCC.Services.Interfaces
@page "/"
@inject IPropriedadeService PropriedadeService
@inject NavigationManager Navigation

<link href="css/login-styles.css" rel="stylesheet" />

<div class="container-login">
    <div class="content-box">
        <div class="title">
            <img src="/Icons/drink64.png" />
        </div>

        @if (mostrarLogin)
        {
            <div class="login-section">
                <div class="header-with-back">
                    <h4>@propriedadeSelecionada.NomePropriedade</h4>
                </div>

                <div class="form-group">
                    <label for="senha">Digite a senha:</label>
                    <input type="password" id="senha" class="form-control" @bind="senha" @onkeypress="SenhaKeyPress" />
                </div>

                <div class="message @(mensagemErro ? "error" : "")">
                    @mensagem
                </div>

                <div class="buttons">
                    <button class="back-button" @onclick="VoltarParaSelecao">Voltar</button>
                    <button class="btn btn-primary" @onclick="ConfirmarLogin">Entrar</button>
                </div>
            </div>
        }
        else
        {
            <h4 class="subtitle">Selecione uma Propriedade</h4>

            @if (propriedades == null)
            {
                <div class="loading">
                    <p>Carregando...</p>
                </div>
            }
            else if (propriedades.Count == 0)
            {
                <div class="empty-state">
                    <p class="erroEncontrarPropriedade">Nenhuma propriedade encontrada.</p>
                    <button class="btn btn-primary" @onclick="IrParaCadastro">Cadastrar Propriedade</button>
                </div>
            }
            else
            {
                <div class="propriedades-lista">
                    @foreach (var propriedade in propriedades)
                    {
                        <button class="propriedade-item" @onclick="() => SelecionarPropriedade(propriedade)">
                            @propriedade.NomePropriedade
                        </button>
                    }
                </div>

                <div class="footer-actions">
                    <button class="btn btn-secondary" @onclick="IrParaCadastro">Cadastrar Nova Propriedade</button>
                </div>
            }
        }
    </div>
</div>

@code {
    private List<Propriedade> propriedades = new();
    private Propriedade propriedadeSelecionada;
    private string senha = string.Empty;
    private bool mostrarLogin = false;
    private string mensagem = string.Empty;
    private bool mensagemErro = false;

    protected override async Task OnInitializedAsync()
    {
        propriedades = await PropriedadeService.ObterTodasPropriedadesAsync();
    }

    private void SelecionarPropriedade(Propriedade propriedade)
    {
        propriedadeSelecionada = propriedade;
        senha = string.Empty;
        mensagem = string.Empty;
        mostrarLogin = true;
    }

    private void VoltarParaSelecao()
    {
        mostrarLogin = false;
        propriedadeSelecionada = null;
        senha = string.Empty;
        mensagem = string.Empty;
    }

    private async Task ConfirmarLogin()
    {
        if (propriedadeSelecionada != null)
        {
            if (string.IsNullOrWhiteSpace(senha))
            {
                mensagem = "Por favor, digite a senha";
                mensagemErro = true;
                return;
            }

            try
            {
                // Usando o novo método de login do serviço
                var propriedadeLogada = await PropriedadeService.LoginPropriedadeAsync(
                    propriedadeSelecionada.NomeProprietario,
                    senha
                );

                if (propriedadeLogada != null)
                {
                    mensagem = "Login realizado com sucesso!";
                    mensagemErro = false;
                    await Task.Delay(500);
                    Navigation.NavigateTo("/inicio");
                }
                else
                {
                    mensagem = "Credenciais inválidas";
                    mensagemErro = true;
                    senha = string.Empty;
                }
            }
            catch (Exception ex)
            {
                mensagem = "Erro ao realizar login: " + ex.Message;
                mensagemErro = true;
            }
        }
    }

    private async Task SenhaKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await ConfirmarLogin();
        }
    }

    private void IrParaCadastro()
    {
        Navigation.NavigateTo("/cadastrar-propriedade");
    }
}