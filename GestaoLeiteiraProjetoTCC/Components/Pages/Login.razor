@page "/"
@using GestaoLeiteiraProjetoTCC.Models
@using GestaoLeiteiraProjetoTCC.Services.Interfaces
@inject IPropriedadeService PropriedadeService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<div class="container-login">
    <div class="content-box">
        <div class="title">
            <img src="/Icons/drink64.png" />
        </div>

        @if (mostrarLogin)
        {
            <div class="login-section">
                <div class="header-with-back">
                    <h4>@propriedadeSelecionada.NomePropriedade</h4>
                </div>

                <div class="form-group">
                    <label for="senha">Digite a senha:</label>
                    <input type="password" id="senha" class="form-control" @bind="senha" @onkeypress="SenhaKeyPress" />
                </div>

                <div class="message @(mensagemErro ? "error" : "")">
                    @mensagem
                </div>

                <div class="buttons">
                    <button class="back-button" @onclick="VoltarParaSelecao">Voltar</button>
                    <button class="btn btn-primary" @onclick="ConfirmarLogin">Entrar</button>
                </div>
            </div>
        }
        else
        {
            <h4 class="subtitle">Selecione uma Propriedade</h4>

            @if (propriedades == null)
            {
                <div class="loading">
                    <p>Carregando...</p>
                </div>
            }
            else if (propriedades.Count == 0)
            {
                <div class="empty-state">
                    <p class="erroEncontrarPropriedade">Nenhuma propriedade encontrada.</p>
                    <button class="btn btn-primary" @onclick="IrParaCadastro">Cadastrar Propriedade</button>
                </div>
            }
            else
            {
                <div class="propriedades-lista">
                    @foreach (var propriedade in propriedades)
                    {
                        <button class="propriedade-item" @onclick="() => SelecionarPropriedade(propriedade)">
                            @propriedade.NomePropriedade
                        </button>
                    }
                </div>

                <div class="footer-actions">
                    <button class="btn btn-secondary" @onclick="IrParaCadastro">Cadastrar Nova Propriedade</button>
                </div>
            }
        }
    </div>
</div>

<style>
    /* Mantém todos os estilos existentes */
    .container-login {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        padding: 20px;
    }

    .content-box {
        background-color: #023047;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        padding: 30px;
        width: 100%;
        max-width: 500px;
    }

    .title {
        display: flex;
        justify-content: center;
        align-items: center;
        text-align: center;
        color: white;
        margin-bottom: 20px;
        font-weight: bold;
    }

    .erroEncontrarPropriedade {
        color: white;
    }

    .subtitle {
        color: white;
        text-align: center;
        margin-bottom: 25px;
    }

    .propriedades-lista {
        display: flex;
        flex-direction: column;
        gap: 10px;
        margin-bottom: 25px;
        width: 100%;
    }

    .propriedade-item {
        width: 100%;
        display: block;
        padding: 15px;
        background-color: #f8f9fa;
        border: 1px solid #e9ecef;
        border-radius: 6px;
        text-align: center;
        font-size: 16px;
        color: #495057;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .propriedade-item:hover {
            background-color: #e9ecef;
            transform: translateY(-2px);
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

    .btn {
        padding: 10px 20px;
        border-radius: 4px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.2s ease;
    }

    .btn-primary {
        background-color: #3a7ca5;
        color: white;
        border: none;
    }

        .btn-primary:hover {
            background-color: #2c6284;
        }

    .btn-secondary {
        background-color: #606c38;
        color: white;
        border: none;
    }

        .btn-secondary:hover {
            background-color: #588157;
        }

    .login-section {
        display: flex;
        flex-direction: column;
        gap: 20px;
        color: white;
        font-size: 1em;
    }

    .back-button {
        background: none;
        border: none;
        color: #3a7ca5;
        cursor: pointer;
        padding: 5px;
        margin-right: 15px;
    }

    .form-group {
        display: flex;
        flex-direction: column;
        gap: 8px;
        color: white;
    }

    .form-control {
        padding: 10px;
        border: 1px solid #ced4da;
        border-radius: 4px;
        font-size: 16px;
    }

    .message {
        min-height: 24px;
        font-size: 14px;
    }

    .error {
        color: #dc3545;
    }

    .loading {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 15px;
    }

    .empty-state {
        text-align: center;
        padding: 20px 0;
    }

    .footer-actions {
        display: flex;
        justify-content: center;
        margin-top: 15px;
    }
</style>

@code {
    private List<Propriedade> propriedades = new();
    private Propriedade propriedadeSelecionada;
    private string senha = string.Empty;
    private bool mostrarLogin = false;
    private string mensagem = string.Empty;
    private bool mensagemErro = false;

    protected override async Task OnInitializedAsync()
    {
        propriedades = await PropriedadeService.ObterTodasPropriedadesAsync();
    }

    private void SelecionarPropriedade(Propriedade propriedade)
    {
        propriedadeSelecionada = propriedade;
        senha = string.Empty;
        mensagem = string.Empty;
        mostrarLogin = true;
    }

    private void VoltarParaSelecao()
    {
        mostrarLogin = false;
        propriedadeSelecionada = null;
        senha = string.Empty;
        mensagem = string.Empty;
    }

    private async Task ConfirmarLogin()
    {
        if (propriedadeSelecionada != null)
        {
            if (string.IsNullOrWhiteSpace(senha))
            {
                mensagem = "Por favor, digite a senha";
                mensagemErro = true;
                return;
            }

            try
            {
                var propriedadeLogada = await PropriedadeService.LoginPropriedadeAsync(
                    propriedadeSelecionada.NomeProprietario,
                    senha
                );

                if (propriedadeLogada != null)
                {
                    mensagem = "Login realizado com sucesso!";
                    mensagemErro = false;
                    await Task.Delay(500);

                    // Detectar se é mobile ou desktop e redirecionar
                    await RedirecionarBaseadoNoDispositivo();
                }
                else
                {
                    mensagem = "Credenciais inválidas";
                    mensagemErro = true;
                    senha = string.Empty;
                }
            }
            catch (Exception ex)
            {
                mensagem = "Erro ao realizar login: " + ex.Message;
                mensagemErro = true;
            }
        }
    }

    private async Task RedirecionarBaseadoNoDispositivo()
    {
        try
        {
            // Detecta se é mobile usando JavaScript
            bool isMobile = await JSRuntime.InvokeAsync<bool>("isMobileDevice");

            if (isMobile)
            {
                Navigation.NavigateTo("/producao-leiteira");
            }
            else
            {
                Navigation.NavigateTo("/inicio");
            }
        }
        catch
        {
            // Fallback para desktop em caso de erro
            Navigation.NavigateTo("/inicio");
        }
    }

    private async Task SenhaKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await ConfirmarLogin();
        }
    }

    private void IrParaCadastro()
    {
        Navigation.NavigateTo("/cadastrar-propriedade");
    }
}

<script>
    window.isMobileDevice = () => {
        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)
            || window.innerWidth <= 768;
    };
</script>